# More function declarations
snippet ufn "Function declaration"
unsafe fn ${1:function_name}(${2})${3} {
	${0}
}
endsnippet

snippet pufn "Function declaration"
pub unsafe fn ${1:function_name}(${2})${3} {
	${0}
}
endsnippet

snippet ecfn "Function declaration"
extern "C" fn ${1:function_name}(${2})${3} {
	${0}
}
endsnippet

snippet pecfn "Function declaration"
pub extern "C" fn ${1:function_name}(${2})${3} {
	${0}
}
endsnippet

# Smarter print snippets
snippet pri "print!"
print!("${2:\{\}}"${2/([^{]|{{)*({})?.*/(?2:, :\);)/}$3${2/([^{]|{{)*({})?.*/(?2:\);)/}
endsnippet

snippet pln "println!"
println!("${2:\{\}}"${2/([^{]|{{)*({})?.*/(?2:, :\);)/}$3${2/([^{]|{{)*({})?.*/(?2:\);)/}
endsnippet

snippet plnd "println! some Debug objects"
println!("`!p
expressions = filter(None, map(str.strip, t[1].split(',')))
snip.rv = '\\n'.join([expr.strip() + ' = {:#?}' for expr in expressions])
`", $1);
endsnippet

# extern crate with macro_use
snippet ecm "extern crate with macro_use"
#[macro_use]
extern crate $1;
endsnippet

# new but the default is Self
snippet new "Constructor function"
pub fn new(${2}) -> ${1:Self} {
	$1 { ${3} }
}
endsnippet

# Copy-pasted to fix inner tabstop
snippet impl "Struct/Trait implementation"
impl ${1:Type/Trait}${2: for ${3:Type}} {
	${0}
}
endsnippet

# Inline attribute
snippet inl "Inline attribute"
#[inline]
endsnippet

# Option and Result with ${VISUAL}
snippet opt "Option<T>"
Option<${1:${VISUAL:()}}>
endsnippet
snippet res "Result<T, E>"
Result<${1:${VISUAL:()}}, ${2:()}>
endsnippet

# Unsafe block
snippet uns "unsafe { ... }"
unsafe { ${1:${VISUAL}} }
endsnippet
