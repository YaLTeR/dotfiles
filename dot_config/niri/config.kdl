debug {
    // preview-render "screencast"
    // preview-render "screen-capture"
    // dbus-interfaces-in-non-session-instances
    // wait-for-frame-completion-before-queueing
    // wait-for-frame-completion-in-pipewire
    // enable-overlay-planes
    // disable-cursor-plane
    // disable-direct-scanout
    // restrict-primary-scanout-to-matching-format
    // render-drm-device "/dev/dri/renderD129"
    // render-drm-device "/dev/dri/renderD128"
    // render-drm-device "/dev/dri/card1"
    // force-pipewire-invalid-modifier
    // emulate-zero-presentation-time
    // disable-transactions
    // disable-resize-throttling
    // keep-laptop-panel-on-when-lid-is-closed
    // disable-monitor-names
    // strict-new-window-focus-policy
    // honor-xdg-activation-with-invalid-serial
    // deactivate-unfocused-windows
}

xwayland-satellite {
    // off
    path "~/source/rs/xwayland-satellite/target/release/xwayland-satellite"
}

input {
    keyboard {
        /-xkb {
            layout "us,ru"
            // variant "colemak_dh_ortho,"
            options "compose:ralt,ctrl:nocaps"
        }

        repeat-delay 500
        repeat-rate 30

        // track-layout "window"
        numlock
    }

    touchpad {
        tap
        // dwt
        // dwtp
        natural-scroll
        accel-speed 0.4
        // click-method "clickfinger"
        // accel-profile "flat"
        // tap-button-map "left-middle-right"
        // left-handed
        // middle-emulation
        // scroll-factor 0.1
        // scroll-factor 2
        // scroll-method "edge"
    }

    mouse {
        // natural-scroll
        // accel-speed -1
        // accel-profile "flat"
        // left-handed
        // middle-emulation
        // scroll-factor 0.1
        // scroll-factor 2
    }

    trackpoint {
        // natural-scroll
        // accel-speed -1.0
        // accel-profile "flat"
        // middle-emulation
    }

    tablet {
        // map-to-output "eDP-1"
        // map-to-output "eDP-2"
        // map-to-output "HDMI-A-1"
        // map-to-output "DP-1"
        map-to-output "Acer Technologies XV320QU LV 420615FCD4200"
        // map-to-output "Dell Inc. Dell S2716DG #ASOwvAqQj0Dd"
        // left-handed
        /-calibration-matrix 0.0 -1.0 1.0 \
                           1.0  0.0 0.0
        /-calibration-matrix 1.0 0.0 0.0 0.0 1.0 0.0
    }

    touch {
        // off
        // map-to-output "DP-3"
        map-to-output "Interaction Systems, Inc TYPE-C TCH00562020"
    }

    // disable-power-key-handling
    // warp-mouse-to-focus
    // warp-mouse-to-focus mode="center-xy"
    // warp-mouse-to-focus mode="center-xy-always"
    // focus-follows-mouse
    focus-follows-mouse max-scroll-amount="0%"
    // workspace-auto-back-and-forth

    // mod-key "Alt"
    // mod-key "Ctrl"
    // mod-key-nested "Ctrl"
}

/-workspace "notes" {
    // open-on-output "eDP-1"
    open-on-output "eDP-2"
}

workspace "discord" {
    // open-on-output "DP-2"
    open-on-output "Dell Inc. Dell S2716DG #ASOwvAqQj0Dd"
}

workspace "chat" {
    // open-on-output "DP-2"
    open-on-output "Dell Inc. Dell S2716DG #ASOwvAqQj0Dd"
    // open-on-output "eDP-2"
}

workspace "browser" {
    open-on-output "Acer Technologies XV320QU LV 420615FCD4200"
    // open-on-output "DP-2"
}

// workspace "dash" {
//     open-on-output "eDP-1"
// }

output "winit" {
    // scale 2.0
    // scale 2.333
    // scale 3.0
    // scale 1.25
    // scale 1.333
    // transform "flipped-90"
    position x=100 y=200
    // background-color "#000"
    // background-color "#030"
    // background-color "#ccc"
    // background-color "#fff"
    // background-color "#0000"
    // backdrop-color "#999"
}

output "BOE 0x0A9B Unknown" {
    // off

    // scale 2.0
    // scale 1.75
    scale 1.5
    // transform "90"
    position x=0 y=0
    // mode "1920x1200"
    // mode "2560x1600@60.002"
    // mode "1280x1024"
    // mode "1280x720"
    // mode "640x480"

    // variable-refresh-rate on-demand=true
}

output "Acer Technologies XV320QU LV 420615FCD4200" {
    // off
    // position x=-2560 y=-1440
    // position x=2500 y=0
    // mode "1920x1080@60.000"
    // mode "800x600@72.188"
    // mode "100x100"
    // mode "1280x720"

    variable-refresh-rate on-demand=true
    // variable-refresh-rate
    // background-color "#030"
    // backdrop-color "#777777"
    // focus-at-startup
}

output "Dell Inc. Dell S2716DG #ASOwvAqQj0Dd" {
    // off

    // position x=0 y=-1440
    // mode "3440x1440@99.982"
    // mode "2560x1440@119.998"

    // position x=2560 y=0
    mode "2560x1440@143.998"
    // scale 1.25

    // variable-refresh-rate
    // background-color "#003"
    // focus-at-startup
}

output "Nvidia G-SYNC 241910 #ASNWvgsHCG3d" {
    mode "1920x1080@144.001"
}

output "PNP(BNQ) BenQ XL2420T V4C01839SL0" {
    position x=-1920 y=0
}

output "Samsung Electric Company SyncMaster HLPB800375" {
    position x=-1920 y=0
}

layout {
    // background-color "#5005"
    // background-color "transparent"

    focus-ring {
        // off
        width 1
        // width 8
        active-color "#f9e2af"
        // catppuccin-mocha Surface2
        // inactive-color "#585b70"
        // inactive-color "green"
        inactive-color "transparent"

        // active-gradient from="#80c8ff" to="#bbddff" angle=45
        // active-gradient from="#f38ba8" to="#f9e2af" angle=45 relative-to="workspace-view"
        // active-gradient from="#f00" to="#fc0" angle=45 relative-to="workspace-view" in="oklch longer hue"
        // active-gradient from="red" to="orange" angle=45 relative-to="workspace-view" in="oklch longer hue"
        // active-gradient from="red" to="orange" angle=45 in="oklch longer hue"
        active-gradient from="#E5989B" to="#FFB4A2" angle=45 relative-to="workspace-view" in="oklch longer hue"
    }

    border {
        // off
        width 1
        // width 2
        // width 4
        // width 32
        // width 128

        // active-color "#f38ba8"
        // inactive-color "#585b70"

        active-color "#6c7086"
        inactive-color "#6c7086"

        // active-gradient from="#f38ba8" to="#f9e2af" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#f38ba8" to="#f9e2af" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#f38ba8aa" to="#f9e2afaa" angle=45 relative-to="workspace-view"

        // active-gradient from="red" to="orange" angle=45 relative-to="workspace-view" in="oklch longer hue"
        // inactive-gradient from="#585b70" to="#7f849c" angle=45 relative-to="workspace-view"

        // inactive-gradient from="green" to="lightblue" angle=45 relative-to="workspace-view"
        // active-gradient from="#ff0000ff" to="#00ff0011" angle=90 in="srgb-linear"
        // active-gradient from="#ff0000ff" to="transparent" angle=90 in="srgb"
        // active-gradient from="red" to="orange" angle=45 in="oklch longer hue"
        active-gradient from="#E5989B" to="#FFB4A2" angle=45 relative-to="workspace-view" in="oklch longer hue"

        // active-gradient from="yellow" to="red" angle=45 in="oklab" relative-to="workspace-view"
        // inactive-gradient from="yellow" to="red" angle=45

        // urgent-gradient from="#800" to="#a33" angle=45
    }

    // default-column-display "tabbed"

    tab-indicator {
        width 2
        // width 4
        // width 8
        // width 64
        // width 128

        // gap -8
        // gap -2
        // gap -0.1
        // gap 0
        // gap 0.1
        // gap 2
        // gap 3
        gap 4

        // gaps-between-tabs 0.1
        gaps-between-tabs 2
        // gaps-between-tabs 64

        // corner-radius 8
        // corner-radius 64

        // hide-when-single-tab

        // place-within-column

        // position "right"
        // position "top"
        // position "bottom"

        // length total-proportion=0.0
        // length total-proportion=1.0
        // length total-proportion=1.3

        // active-color "#f9e2af"
        // active-gradient from="red" to="orange" angle=45 relative-to="workspace-view" in="oklch longer hue"

        // inactive-color "red"
        // inactive-gradient from="#585b70" to="#7f849c" angle=45 relative-to="workspace-view"
        // inactive-gradient from="#f007" to="#fc07" angle=45 relative-to="workspace-view" in="oklch longer hue"

        // inactive-color "#f9e2af90"
        inactive-color "#585b70"
    }

    shadow {
        on

        // draw-behind-window false
        // draw-behind-window true

        // softness 0
        // softness 1
        // softness 10
        // softness 15
        // softness 23
        // softness 20
        // softness 40
        // softness 30
        // softness 100
        // softness 200
        // softness 1000

        // spread 0
        // spread 2
        // spread 5
        // spread 35
        // spread 50

        // color "#00000070"
        // color "#f007"
        // color "#f00f"
        // inactive-color "#00000054"

        // color "#4007"

        // offset x=0 y=0
        // offset x=0 y=5
        // offset x=0 y=50
        // offset x=-50 y=-50
        // offset y=200
    }

    insert-hint {
        // off
        color "#ffc87f80"
        gradient from="#f38ba880" to="#f9e2af80" angle=45 relative-to="workspace-view"
        // gradient from="#ff000080" to="#ffa50080" angle=45 relative-to="workspace-view" in="oklch longer hue"
    }

    preset-column-widths {
        proportion 0.3333333333333333
        proportion 0.5
        proportion 0.66667
        // proportion 0.25
        // fixed 1000
    }

    /-preset-window-heights {
        proportion 0.3333333333333333
        proportion 0.5
        proportion 0.66667
        // fixed 200
        // fixed 300
    }

    default-column-width { proportion 0.3333333333333333; }
    // default-column-width { }

    // gaps 0
    gaps 8
    // gaps 16
    // gaps 32
    // gaps 64

    struts {
        // left 64
        // right 64
        // top 16
        // bottom 16
        // top 44
        // bottom 64
        // top 64
    }

    // empty-workspace-above-first

    // center-focused-column "on-overflow"
    // center-focused-column "always"

    // always-center-single-column
}

cursor {
    // xcursor-theme "breeze_cursors"
    // xcursor-theme "arstieonart"
    // xcursor-size 48
    // hide-when-typing
    // hide-after-inactive-ms 100
}

prefer-no-csd

// spawn-at-startup "alacritty" "-e" "fish"

environment {
    // GSK_RENDERER "cairo"
    // WAYLAND_DISPLAY null
}

// screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"
// screenshot-path "~/Pictures/niri-scale/%M-%S.png"

hotkey-overlay {
    // skip-at-startup
}

clipboard {
    // disable-primary
}

animations {
    // off
    // slowdown 100
    // slowdown 10
    // slowdown 4
    // slowdown 3
    // slowdown 2
    // slowdown 1.5

    workspace-switch {
        // off
        // duration-ms 2500
        // curve "linear"
        // curve "ease-out-cubic"
        // spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
    }

    overview-open-close {
        // spring damping-ratio=1.0 stiffness=400 epsilon=0.0001
        // spring damping-ratio=1.0 stiffness=800 epsilon=0.0001
        // spring damping-ratio=1.0 stiffness=1000 epsilon=0.0001
        // spring damping-ratio=6.0 stiffness=1200 epsilon=0.0001
        // curve "linear"
        // duration-ms 50
    }

    window-open {
        // off
        // duration-ms 2500
        // curve "ease-out-expo"
        // spring damping-ratio=0.8 stiffness=1000 epsilon=0.0001
        // duration-ms 1000
        // curve "linear"

        /-custom-shader r"
            vec4 open_color(vec3 coords_geo, vec3 size_geo) {
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                vec2 size = size_geo.xy;
                vec2 coords = (coords_geo.xy - vec2(0.5, 0.5)) * size * 2.0;

                // Some padding for borders and shadows.
                float pad = 8.0;
                coords = coords + vec2(pad, pad);
                size = size + vec2(pad, pad) * 2.0;

                coords = coords / length(size);
                float p = niri_clamped_progress;
                if (p * p <= dot(coords, coords))
                    color = vec4(0.0);

                return color;
            }
        "

        /-custom-shader r"
            vec4 open_color(vec3 coords_geo, vec3 size_geo) {
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                return color;
            }
        "
    }

    /-window-close {
        // off
        // duration-ms 2500
        // duration-ms 1000
        duration-ms 250
        curve "linear"
        // spring damping-ratio=0.8 stiffness=1000 epsilon=0.0001

        custom-shader r"
            mat2 rotate(float angle) {
                return mat2(cos(angle), -sin(angle), sin(angle), cos(angle));
            }

            vec4 close_color(vec3 coords_geo, vec3 size_geo) {
                float progress = niri_clamped_progress * niri_clamped_progress;

                vec2 coords = (coords_geo.xy - vec2(0.5, 1.0)) * size_geo.xy;

                coords.y -= progress * 200.0;

                float random = (niri_random_seed - 0.5) / 2.0;
                random = sign(random) - random;
                float max_angle = 0.05 * random;

                float angle = progress * max_angle;
                coords = rotate(angle) * coords;

                coords_geo = vec3(coords / size_geo.xy + vec2(0.5, 1.0), 1.0);

                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                return color * (1.0 - niri_clamped_progress);
            }
        "

        /-custom-shader r"
            vec4 close_color(vec3 coords_geo, vec3 size_geo) {
                vec3 coords_tex = niri_geo_to_tex * coords_geo;
                vec4 color = texture2D(niri_tex, coords_tex.st);

                return color;
            }
        "
    }

    horizontal-view-movement {
        // off
        // duration-ms 500
        // curve "ease-out-cubic"
        // spring damping-ratio=1.0 stiffness=20 epsilon=0.00001
        // spring damping-ratio=10.0 stiffness=800 epsilon=0.0001
    }

    window-movement {
        // off
        // duration-ms 750
        // curve "ease-out-cubic"
        // spring damping-ratio=1.0 stiffness=20 epsilon=0.00001
        // spring damping-ratio=0.2 stiffness=800 epsilon=0.0001
    }

    window-resize {
        // off
        // duration-ms 500
        // duration-ms 2500
        // curve "ease-out-cubic"
        // spring damping-ratio=0.2 stiffness=800 epsilon=0.0001

        /-custom-shader r"
            vec4 resize_color(vec3 coords_curr_geo, vec3 size_curr_geo) {
                vec3 coords_next_geo = niri_curr_geo_to_next_geo * coords_curr_geo;
                vec3 coords_prev_geo = niri_curr_geo_to_prev_geo * coords_curr_geo;

                vec3 coords_crop = niri_geo_to_tex_next * coords_next_geo;
                vec3 coords_stretch = niri_geo_to_tex_next * coords_curr_geo;
                vec3 coords_stretch_prev = niri_geo_to_tex_prev * coords_curr_geo;

                // We can crop if the current window size is smaller than the next window
                // size. One way to tell is by comparing to 1.0 the X and Y scaling
                // coefficients in the current-to-next transformation matrix.
                bool can_crop_by_x = niri_curr_geo_to_next_geo[0][0] <= 1.0;
                bool can_crop_by_y = niri_curr_geo_to_next_geo[1][1] <= 1.0;
                bool crop = can_crop_by_x && can_crop_by_y;

                vec4 color;

                if (crop) {
                    // However, when we crop, we also want to crop out anything outside the
                    // current geometry. This is because the area of the shader is unspecified
                    // and usually bigger than the current geometry, so if we don't fill pixels
                    // outside with transparency, the texture will leak out.
                    //
                    // When stretching, this is not an issue because the area outside will
                    // correspond to client-side decoration shadows, which are already supposed
                    // to be outside.
                    if (coords_curr_geo.x < 0.0 || 1.0 < coords_curr_geo.x ||
                            coords_curr_geo.y < 0.0 || 1.0 < coords_curr_geo.y) {
                        color = vec4(0.0);
                    } else {
                        color = texture2D(niri_tex_next, coords_crop.st);
                        // color = texture2D(niri_tex_prev, (niri_geo_to_tex_prev * coords_prev_geo).st);
                    }
                } else {
                    // If we can't crop, then crossfade.
                    color = texture2D(niri_tex_next, coords_stretch.st);
                    vec4 color_prev = texture2D(niri_tex_prev, coords_stretch_prev.st);
                    color = mix(color_prev, color, niri_clamped_progress);
                }

                return color;
            }
        "
    }

    config-notification-open-close {
        // off
        // duration-ms 250
        // curve "ease-out-cubic"
        // spring damping-ratio=0.1 stiffness=1000 epsilon=0.001
    }

    /-screenshot-ui-open {
        // off
        // duration-ms 200
        // curve "ease-out-quad"
    }
}

gestures {
    dnd-edge-view-scroll {
        // trigger-width 0
        // trigger-width 1
        // trigger-width 10000
        // max-speed 100000
        // delay-ms 0
        // delay-ms 100
        // delay-ms 1000
    }

    dnd-edge-workspace-switch {
        // max-speed 500
    }

    hot-corners {
        // off
    }
}

overview {
    // zoom 0.0001
    // zoom 0.01
    // zoom 0.1
    // zoom 0.25
    // zoom 0.5
    // zoom 0.333
    // zoom 0.75

    // backdrop-color "#ffffff"
    // backdrop-color "#444"
    // backdrop-color "#900"
    // backdrop-color "#262626"

    workspace-shadow {
        // off

        // softness 0
        // softness 40
        // softness 45
        // softness 50
        // softness 60
        // softness 80
        // softness 100

        // spread 5
        // spread 10
        // spread 50

        // offset x=0 y=10
        // offset x=20 y=20

        // color "#0005"
        // color "#000d"
        // color "#000a"
    }
}

window-rule {
    geometry-corner-radius 6
    // geometry-corner-radius 15
    // geometry-corner-radius 32
    clip-to-geometry true
    tiled-state true
}

window-rule {
    match is-urgent=true

    // baba-is-float true

    shadow {
        color "#7d0d2d70"
    }
}

// I want mpv's window dragging, and it disables that on tiled state.
window-rule {
    match app-id="^mpv$"
    tiled-state false
}

/-window-rule {
    match at-startup=false
    exclude app-id="^Alacritty$"
    exclude app-id="^neovide$"
    exclude app-id="firefox$"

    open-floating true
}

/-window-rule {
    match is-active-in-column=false

    min-height 100
    max-height 100
}

/-window-rule {
    match is-floating=true
    exclude app-id="^mpv$"
    exclude app-id="^foot$"

    tiled-state false
    clip-to-geometry false

    shadow {
        off;
        // on;
    }

    border { off; }
    focus-ring { off; }
}

/-window-rule {
    match is-floating=true app-id="^foot$"
    tiled-state false
}

/-window-rule {
    match app-id="Adwaita"
    // match app-id="TextEditor"
    // opacity 0.5
    // block-out-from "screencast"
    geometry-corner-radius 15
    // geometry-corner-radius 0 0 8 8
    // clip-to-geometry false
    border {
        // off
        // width 12
        // width 2
    }
}

window-rule {
    match app-id="^gnome-terminal-server$"
    // opacity 0.5
    // block-out-from "screen-capture"
    clip-to-geometry false
    geometry-corner-radius 8 8 0 0
    border {
        width 4
    }
}

window-rule {
    match app-id=r#"^org\.telegram\.desktop$"#
    geometry-corner-radius 6
}

/-window-rule {
    match title="~/source"
    geometry-corner-radius 12 24 32 64
}

/-window-rule {
    match title="presentation-shm"
    geometry-corner-radius 999
}

/-window-rule {
    match app-id="code"
    // opacity 0.98
    border {
        // off
    }
}

/-window-rule {
    match app-id="weston."
    // block-out-from "screencast"
    geometry-corner-radius 12 24 32 64
    // geometry-corner-radius 999
    clip-to-geometry true
}

// window-rule {
//     match app-id="Alacritty"
//     geometry-corner-radius 12 12 0 0
//     border {
//         width 8
//     }
// }

window-rule {
    match app-id="org.freedesktop.weston.simple-egl"
    // min-width 128
    // max-width 128
    // min-height 128
    // max-height 128
    // match is-focused=true
    // match is-active=false
    // opacity 0.9
    // block-out-from "screencast"
    // block-out-from "screen-capture"
    // min-width 1000
    draw-border-with-background false
    // match app-id="mpv"
    // open-on-output "HDMI-A-1"
    // open-maximized true
    // default-column-width { proportion 0.5; }
    // default-window-height { fixed 100; }
    // open-fullscreen false
    // open-floating false
    // open-floating true
}

window-rule {
    match app-id="^gimp" title="^GIMP Startup$"

    open-focused false
}

/-window-rule {
    match app-id="^Alacritty$"
    match app-id="^neovide$"
    exclude is-active=true

    opacity 0.95
}

/-window-rule {
    match app-id="^Alacritty$"
    match app-id="^neovide$"
    match app-id="^code$"
    // match title="^niri$"
    match app-id="^labwc$"

    border { on; }
    // geometry-corner-radius 8
    // geometry-corner-radius 12
    // clip-to-geometry true
}

// window-rule {
//     match app-id="^Alacritty$"
//     match app-id="^neovide$"
//     exclude is-floating=false
//
//     border { off; }
// }

window-rule {
    match app-id=r#"^org\.telegram\.desktop$"# title="^Media viewer$"
    open-fullscreen false
    open-floating true
    // default-column-width { proportion 0.5; }
}

window-rule {
    match app-id=r#"^org\.wezfurlong\.wezterm$"#
    default-column-width {}
}

window-rule {
    match app-id="^mpv$"
    match app-id="^hl_linux$"
    match app-id="^steam_app_524220$" // NieR:Automata
    match app-id="^steam_app_1299460$" // Wanderstop
    variable-refresh-rate true
    default-column-width {}
}

window-rule {
    match app-id="^blender$"
    match app-id="^gimp"
    match app-id=r#"^org\.musescore\.MuseScore$"#
    default-column-width { fixed 1200; }
    open-maximized true
}

window-rule {
    match app-id="^obsidian$"
    default-column-width { fixed 1000; }
}

window-rule {
    match at-startup=true app-id="^obsidian$"
    // open-on-workspace "notes"
    open-on-workspace "chat"
}

window-rule {
    match at-startup=true app-id=r#"^org\.telegram\.desktop$"#
    exclude title="^Media viewer$"

    open-on-workspace "chat"
}

window-rule {
    match at-startup=true app-id=r#"^org\.gnome\.Fractal$"#
    open-on-workspace "chat"
}

window-rule {
    match at-startup=true app-id=r#"^discord"#
    match at-startup=true app-id=r#"^com\.discordapp\.Discord$"#
    open-on-workspace "discord"
}

window-rule {
    match app-id=r#"^discord"#
    match app-id=r#"^com\.discordapp\.Discord$"#
    default-column-width { proportion 0.66667; }
}

window-rule {
    match app-id=r#"firefox$"#
    exclude title="^Picture-in-Picture$"

    default-column-width { proportion 0.5; }
}

window-rule {
    match at-startup=true app-id=r#"firefox$"#

    open-on-workspace "browser"
    open-maximized true
}

window-rule {
    match at-startup=true app-id=r#"^org\.keepassxc\.KeePassXC$"#

    open-on-workspace "browser"
}

window-rule {
    match app-id="^code"
    match app-id="^cursor"
    default-column-width { proportion 0.66667; }
}

// window-rule {
//     match app-id=r#"firefox$"# title=" Grafana "
//
//     open-on-workspace "dash"
//     open-maximized true
// }

window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"#
    match app-id=r#"^org\.gnome\.World\.Secrets$"#
    match app-id=r#"^org\.telegram\.desktop$"#

    // Doesn't quite work: Firefox changes the title one frame early.
    match app-id=r#"firefox$"# title="- Gmail "
    match app-id=r#"firefox$"# title="^Google Calendar "
    match app-id=r#"firefox$"# title="Todoist "
    match app-id=r#"firefox$"# title=r#"^GNOME( \*)?( \[\d+\])? \| "#
    match app-id=r#"firefox$"# title=r#"^Element "#
    match app-id=r#"firefox$"# title=r#"Discord \| "#

    block-out-from "screencast"
    // block-out-from "screen-capture"

    border {
        // off
        // active-color "red"
    }

    // clip-to-geometry false
    // geometry-corner-radius 12
}

window-rule {
    match app-id="firefox$" title="^Picture-in-Picture$"
    match app-id=r#"^AmneziaVPN$"#
    match app-id="^mpv$"
    match app-id=r#"^org\.gnome\.Loupe"#
    match app-id=r#"^org\.gnome\.Calculator"#
    match app-id=r#"^org\.gnome\.Decibels"#
    match app-id=r#"^org\.gnome\.gitlab\.YaLTeR\.VideoTrimmer"#
    match app-id=r#"^org\.gnome\.gitlab\.YaLTeR\.Identity"#
    match app-id=r#"^app\.drey\.Warp"#
    match app-id=r#"^org\.gnome\.NautilusPreviewer$"#
    // match app-id="pavucontrol"
    // match title="^niri$"
    match app-id=r#"^lxqt-policykit-agent$"#

    open-floating true

    // focus-ring { on; }
}

window-rule {
    match app-id=r#"^org\.gnome\.Loupe"#
    match app-id=r#"^org\.gnome\.Calculator"#
    match app-id=r#"^org\.gnome\.Decibels"#
    match app-id=r#"^org\.gnome\.gitlab\.YaLTeR\.VideoTrimmer"#
    match app-id=r#"^video-trimmer"#
    match app-id=r#"^org\.gnome\.gitlab\.YaLTeR\.Identity"#
    match app-id=r#"^identity"#
    match app-id=r#"^app\.drey\.Warp"#
    match app-id=r#"^org\.gnome\.NautilusPreviewer$"#
    match app-id=r#"^org\.gnome\.Adwaita1\.Demo$"#

    geometry-corner-radius 15
    // clip-to-geometry false
    tiled-state false

    // focus-ring { off; }
    // border { off; }
}

window-rule {
    match app-id="^explorer.exe$"
    default-column-width {}
    default-window-height {}
    // open-floating true
}

// Always focus the KeePassXC-Browser unlock dialog.
//
// This dialog opens parented to the KeePassXC window rather than the browser,
// so it doesn't get auto-focused by default.
window-rule {
    match app-id=r#"^org\.keepassxc\.KeePassXC$"# title="^KeePassXC - Browser Access Request$"
    match app-id=r#"^org\.keepassxc\.KeePassXC$"# title="^Unlock Database - KeePassXC$"

    open-focused true
}

window-rule {
    match app-id="foot"

    // geometry-corner-radius 0
    // geometry-corner-radius 12
    // geometry-corner-radius 15
    // clip-to-geometry true
    // opacity 0.5
    // opacity 0.05
    // opacity 0.0
    // draw-border-with-background false

    /-shadow {
        // off
        // draw-behind-window true
        // softness 0
        // offset x=5 y=5
        // offset x=50 y=20
        // offset x=0 y=0
        // spread -20
        // spread 0
        // softness 100
        // spread 0
        // inactive-color "#000"
    }

    /-focus-ring {
        off
    }

    /-border {
        // on
        off
        // width 1
        width 256
        active-gradient from="#f38ba8" to="#f9e2af" angle=45 relative-to="workspace-view"
        inactive-gradient from="#f38ba8aa" to="#f9e2afaa" angle=45 relative-to="workspace-view"
    }

    /-tab-indicator {
        inactive-gradient from="#f38ba8aa" to="#f9e2afaa" angle=45 relative-to="workspace-view"
    }
}

/-window-rule {
    match app-id="circle"
    opacity 0.05

    geometry-corner-radius 999

    shadow {
        // off
        // draw-behind-window true
        inactive-color "#000"
    }
}

/-window-rule {
    match app-id="osu"
    geometry-corner-radius 999
    default-column-width { fixed 1000; }
    default-window-height { fixed 1000; }
    // open-floating true
    open-fullscreen false
    /-focus-ring {
        on
        active-gradient from="red" to="orange" angle=45 relative-to="workspace-view" in="oklch longer hue"
    }
}

window-rule {
    // match app-id="Alacritty"
    // match app-id="Adwaita"
    // match title="About GTK Demo"
    // match title="GTK Demo"
    // match title="sleep"
    // match at-startup=true
    // match is-floating=true
    // opacity 0.9
    // opacity 0.5
    // opacity 0.0
    // opacity 0.98

    // open-on-output "eDP-1"
    // open-on-output "Dell Inc. Dell S2716DG #ASOwvAqQj0Dd"
    // open-on-workspace "browser"
    // open-on-workspace "discord"
    // default-column-width { proportion 0.5; }
    // default-column-width { fixed 400; }
    // default-column-width {}
    // default-window-height { proportion 0.25; }
    // default-window-height { proportion 1.1; }
    // default-window-height { fixed 100; }
    // open-maximized true
    // open-fullscreen true
    // open-floating false
    // open-floating true
    // open-focused false
    // open-focused true
    // block-out-from "screencast"
    // default-floating-position x=0 y=0 relative-to="bottom-right"
    // scroll-factor 0.1
    // scroll-factor 0
    // baba-is-float true
    // tiled-state true
    // tiled-state false

    // min-width 600
    // max-width 600
    // min-height 600
    // max-height 600

    focus-ring {
        // off
        // on
        // active-gradient from="red" to="green"
        // active-color "lightgreen"
        // width 1
    }

    border {
        // off
        // on
        // width 12
        // width 0
        // active-color "#ff808080"
        // active-color "red"
    }

    shadow {
        // off
        // draw-behind-window true
    }

    tab-indicator {
        // inactive-color "red"
        // inactive-gradient from="yellow" to="yellow"
    }

    // draw-border-with-background true
    // draw-border-with-background false

    // geometry-corner-radius 12 24 32 64
    // geometry-corner-radius 999
    // geometry-corner-radius 30
    // geometry-corner-radius 1
    // geometry-corner-radius 12
    // geometry-corner-radius 6
    // geometry-corner-radius 32
    // geometry-corner-radius 25
    // clip-to-geometry true
}

window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }

    border {
        inactive-color "#7d0d2d"
    }

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}

// layer-rule {
//     baba-is-float true
// }

/-layer-rule {
    // match namespace="waybar"
    // match namespace="launcher"
    // match namespace="^notifications$"
    opacity 0.5
    // opacity 0.05
    block-out-from "screencast"

    // geometry-corner-radius 12
    // geometry-corner-radius 999

    shadow {
        on
        // draw-behind-window true
    }
}

layer-rule {
    // fuzzel
    match namespace="^launcher$"

    // opacity 0.05

    shadow {
        on
    }

    // geometry-corner-radius 14
    // geometry-corner-radius 8
}

/-layer-rule {
    match namespace="^launcher$"
    // match namespace="^notifications$"

    baba-is-float true
}

layer-rule {
    // mako
    match namespace="^notifications$"
    block-out-from "screencast"
}

layer-rule {
    match namespace="^wallpaper$"
    // match namespace="^desktop$"
    // match namespace="^desktop-icons$"

    place-within-backdrop true
}

binds {
    Mod+Shift+Slash { show-hotkey-overlay; }

    Super+Shift+S hotkey-overlay-title="Toggle Dark/Light Style" { spawn "set-theme"; }
    Super+Alt+L allow-when-locked=true hotkey-overlay-title="Lock the Screen" { spawn "hyprlock"; }
    Mod+D hotkey-overlay-title="Run an Application" { spawn "fuzzel"; }
    Mod+M hotkey-overlay-title="Open File Manager" { spawn "nautilus"; }

    // Mod+Shift+C { spawn "sh" "-c" "t env DISPLAY=:0 xsel -ob | wl-copy"; }
    // Mod+Shift+V { spawn "sh" "-c" "wl-paste -n | t env DISPLAY=:0 xsel -ib"; }
    Super+Alt+S hotkey-overlay-title=null { spawn "sh" "-c" "pkill orca || exec orca"; }

    // Mod+T { spawn "sh" "-c" "alacritty msg create-window -e fish -C t || alacritty -e fish -C t"; }
    Mod+T hotkey-overlay-title="Open Terminal in the Toolbox" { spawn "~/source/sh/spawn-alacritty.bash" "toolbox"; }
    Mod+Shift+T hotkey-overlay-title="Open Terminal on the Host" { spawn "~/source/sh/spawn-alacritty.bash" "host"; }
    Mod+E hotkey-overlay-title="Open Neovide" { spawn "t" "neovide"; }
    // Mod+Ctrl+T { spawn "spawn-alacritty.bash" "toolbox"; }
    Mod+Return { spawn "alacritty"; }
    // Mod+Shift+T { spawn "alacritty"; }
    // Mod+Ctrl+T { spawn "t" "alacritty"; }
    // Mod+Shift+T { spawn "sh" "-c" "alacritty msg create-window || alacritty"; }
    // Mod+Return { spawn "~/arst"; }
    // Mod+Return { do-screen-transition; }
    // Mod+T { spawn "flatpak" "run" "org.gnome.Ptyxis.Devel" "-s"; }
    // Mod+T { spawn "~/.local/bin/spawn-ptyxis.sh"; }
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }
    // Mod+T { spawn "kgx" "-e" "fish -C t"; }

    // Mod+W { spawn "sh" "-c" "t mpv --pause $(wl-paste)"; }
    Super+Alt+M     hotkey-overlay-title="Switch to 170 Hz" { spawn "~/source/sh/refresh.sh" "170"; }
    Super+Alt+Comma hotkey-overlay-title="Switch to 120 Hz" { spawn "~/source/sh/refresh.sh" "120"; }

    Super+Alt+O hotkey-overlay-title="Set Dynamic Cast Output" { set-dynamic-cast-monitor; }
    Super+Alt+W hotkey-overlay-title="Set Dynamic Cast Window" { set-dynamic-cast-window; }
    Super+Alt+P hotkey-overlay-title="Pick Dynamic Cast Window" { spawn "~/source/sh/pick-dynamic-cast-window.sh"; }
    Super+Alt+C hotkey-overlay-title="Clear Dynamic Cast Target" { clear-dynamic-cast-target; }

    // XF86AudioRaiseVolume allow-when-locked=true repeat=false { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    // XF86AudioLowerVolume allow-when-locked=true repeat=false { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    // XF86AudioMute        allow-when-locked=true repeat=false { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    // XF86AudioMicMute     allow-when-locked=true repeat=false { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }
    XF86AudioRaiseVolume allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--output-volume" "+10"; }
    XF86AudioLowerVolume allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--output-volume" "-10"; }
    XF86AudioMute        allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--output-volume" "mute-toggle"; }
    XF86AudioMicMute     allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--input-volume" "mute-toggle"; }

    XF86MonBrightnessUp   allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--brightness" "+10"; }
    XF86MonBrightnessDown allow-when-locked=true repeat=false { spawn "~/source/rs/SwayOSD/build/src/swayosd-client" "--brightness" "-10"; }

    Mod+O { toggle-overview; }

    Mod+Q { close-window; }
    Mod+BackSpace { close-window; }

    // Mod+Tab { focus-window-previous; }

    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-down; }
    Mod+K     { focus-window-up; }
    Mod+L     { focus-column-right; }
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-down; }
    Mod+Up    { focus-window-up; }
    Mod+Right { focus-column-right; }

    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down; }
    Mod+Ctrl+K     { move-window-up; }
    Mod+Ctrl+L     { move-column-right; }
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down; }
    Mod+Ctrl+Up    { move-window-up; }
    Mod+Ctrl+Right { move-column-right; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Ctrl+Home { move-column-to-first; }
    Mod+Ctrl+End  { move-column-to-last; }

    Mod+Shift+H     { focus-monitor-left; }
    Mod+Shift+J     { focus-monitor-down; }
    Mod+Shift+K     { focus-monitor-up; }
    Mod+Shift+L     { focus-monitor-right; }
    Mod+Shift+Left  { focus-monitor-left; }
    Mod+Shift+Down  { focus-monitor-down; }
    Mod+Shift+Up    { focus-monitor-up; }
    Mod+Shift+Right { focus-monitor-right; }

    Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }
    Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }

    Mod+Shift+Alt+H     { move-workspace-to-monitor-left; }
    Mod+Shift+Alt+J     { move-workspace-to-monitor-down; }
    Mod+Shift+Alt+K     { move-workspace-to-monitor-up; }
    Mod+Shift+Alt+L     { move-workspace-to-monitor-right; }
    Mod+Shift+Alt+Left  { move-workspace-to-monitor-left; }
    Mod+Shift+Alt+Down  { move-workspace-to-monitor-down; }
    Mod+Shift+Alt+Up    { move-workspace-to-monitor-up; }
    Mod+Shift+Alt+Right { move-workspace-to-monitor-right; }

    Mod+U              { focus-workspace-down; }
    Mod+I              { focus-workspace-up; }
    Mod+Page_Down      { focus-workspace-down; }
    Mod+Page_Up        { focus-workspace-up; }
    Mod+Ctrl+U         { move-column-to-workspace-down; }
    Mod+Ctrl+I         { move-column-to-workspace-up; }
    Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
    Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }

    Mod+WheelScrollDown            cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp              cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown       cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp         cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight           { focus-column-right; }
    Mod+WheelScrollLeft            { focus-column-left; }
    Mod+Ctrl+WheelScrollRight      { move-column-right; }
    Mod+Ctrl+WheelScrollLeft       { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+TouchpadScrollUp   allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }
    Mod+TouchpadScrollDown allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollLeft  { focus-column-left; }
    // Mod+TouchpadScrollRight { focus-column-right; }

    Mod+Shift+U         { move-workspace-down; }
    Mod+Shift+I         { move-workspace-up; }
    Mod+Shift+Page_Down { move-workspace-down; }
    Mod+Shift+Page_Up   { move-workspace-up; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    Mod+Tab { focus-workspace-previous; }

    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }
    // Mod+Comma  { swap-window-left; }
    // Mod+Period { swap-window-right; }

    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }
    // Mod+BracketLeft  { focus-column-or-monitor-left; }
    // Mod+BracketRight { focus-column-or-monitor-right; }
    // Mod+BracketLeft  { focus-window-or-monitor-up; }
    // Mod+BracketRight { focus-window-or-monitor-down; }

    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }
    Mod+Ctrl+F { expand-column-to-available-width; }
    Mod+Ctrl+Shift+F { toggle-windowed-fullscreen; }
    Mod+C { center-column; }
    Mod+Ctrl+C { center-visible-columns; }

    Mod+Minus { set-column-width "-10%"; }
    Mod+Equal { set-column-width "+10%"; }
    Mod+Ctrl+Minus { set-column-width "-1"; }
    Mod+Ctrl+Equal { set-column-width "+1"; }

    Mod+Shift+Minus      { set-window-height "-10%"; }
    Mod+Shift+Equal      { set-window-height "+10%"; }
    Mod+Shift+Ctrl+Minus { set-window-height "-1"; }
    Mod+Shift+Ctrl+Equal { set-window-height "+1"; }

    Mod+0            { set-column-width "960"; }
    Mod+Shift+0      { set-window-height "540"; }
    Mod+Alt+0        { set-column-width "1280"; }
    Mod+Shift+Alt+0  { set-window-height "720"; }
    Mod+Ctrl+0       { set-column-width "1920"; }
    Mod+Shift+Ctrl+0 { set-window-height "1080"; }

    Mod+Space       { switch-layout "next"; }
    Mod+Shift+Space { switch-layout "prev"; }

    Mod+V       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    Mod+W { toggle-column-tabbed-display; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Mod+P { screenshot; }

    Mod+Escape { toggle-keyboard-shortcuts-inhibit; }

    Mod+Shift+E { quit; }
    Ctrl+Alt+Delete { quit; }
    Mod+Shift+P { power-off-monitors; }

    Mod+Shift+Ctrl+T { toggle-debug-tint; }
    Mod+Shift+Ctrl+O { debug-toggle-opaque-regions; }
    Mod+Shift+Ctrl+D { debug-toggle-damage; }

    // Mod+Ctrl+MouseLeft { close-window; }
    // Mod+MouseMiddle    { maximize-column; }
}
